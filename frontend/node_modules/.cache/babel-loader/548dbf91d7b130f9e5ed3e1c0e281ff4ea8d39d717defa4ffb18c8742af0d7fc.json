{"ast":null,"code":"var fs = require('fs');\nvar expressApp = global.app;\nmodule.exports = expressRouter = function () {\n  var appPath = __dirname + '/../..';\n  var routePath = appPath + '/routes/';\n  if (typeof arguments[0] === 'string' || arguments.length === 0) {\n    routePath = appPath + arguments[0] + '/';\n    expressApp = expressApp || arguments[1];\n  } else {\n    expressApp = arguments[0];\n  }\n  var fileName = 'index.txt';\n  expressRouter.process(fs.readFileSync(routePath + fileName, 'UTF-8'), routePath);\n};\nexpressRouter.process = function (data, routePath) {\n  expressRouter.routes = {};\n  data = data.split('\\n'); // split each line into an array of lines\n  for (var i = 0, dataLength = data.length; i < dataLength; i++) {\n    if (data[i].indexOf('//') && data[i].trim()) {\n      // don't listen to commented lines\n      var lineInfo = data[i].split(' '); // split line info into an array\n      if (lineInfo.length !== 3) {\n        throw new Error('Invalid route syntax. Please write them this way: \"method url middleware1,middleware2,...,middlewareN\"');\n      }\n      var middlewares = lineInfo[2].split(','); // split route middlewares into an array\n      var routes = []; // array of routes to apply for this line\n      for (var j = 0, middlewaresLength = middlewares.length; j < middlewaresLength; j++) {\n        var routeInfo = middlewares[j].split('.'); // split route into an array\n        var route = expressRouter.routes[routeInfo[0]] = expressRouter.routes[routeInfo[0]] || require(routePath + routeInfo[0]); // load route module into expressRouter.routes and set route var with this module\n        for (var k = 1; k < routeInfo.length; k++) {\n          if (!route) {\n            throw new Error('Route specified could not be found.');\n          }\n          route = route[routeInfo[k]]; // set route one level deeper each time\n        }\n\n        routes.push(route);\n      }\n      expressApp[lineInfo[0].toLowerCase()](lineInfo[1], routes); // apply routes to application\n    }\n  }\n};","map":{"version":3,"names":["fs","require","expressApp","global","app","module","exports","expressRouter","appPath","__dirname","routePath","arguments","length","fileName","process","readFileSync","data","routes","split","i","dataLength","indexOf","trim","lineInfo","Error","middlewares","j","middlewaresLength","routeInfo","route","k","push","toLowerCase"],"sources":["C:/Users/jaken/Documents/Projects/AdShare/v01/frontend/node_modules/express-router/index.js"],"sourcesContent":["var fs = require('fs');\nvar expressApp = global.app;\nmodule.exports = expressRouter = function(){\n\tvar appPath = __dirname + '/../..';\n\tvar routePath = appPath + '/routes/';\n\tif (typeof arguments[0] === 'string' || arguments.length === 0){\n\t\troutePath = appPath + arguments[0] + '/';\n\t\texpressApp = expressApp || arguments[1];\n\t}else{\n\t\texpressApp = arguments[0];\n\t}\n\tvar fileName = 'index.txt';\n\texpressRouter.process(fs.readFileSync(routePath + fileName, 'UTF-8'), routePath);\n};\nexpressRouter.process = function (data, routePath) {\n\texpressRouter.routes = {};\n\tdata = data.split('\\n'); // split each line into an array of lines\n\tfor (var i = 0, dataLength = data.length; i < dataLength; i++) {\n\t\tif (data[i].indexOf('//') && data[i].trim()) { // don't listen to commented lines\n\t\t\tvar lineInfo = data[i].split(' '); // split line info into an array\n\t\t\tif (lineInfo.length !== 3){\n\t\t\t\tthrow new Error('Invalid route syntax. Please write them this way: \"method url middleware1,middleware2,...,middlewareN\"');\n\t\t\t}\n\t\t\tvar middlewares = lineInfo[2].split(','); // split route middlewares into an array\n\t\t\tvar routes = []; // array of routes to apply for this line\n\t\t\tfor (var j = 0, middlewaresLength = middlewares.length; j < middlewaresLength; j++) {\n\t\t\t\tvar routeInfo = middlewares[j].split('.'); // split route into an array\n\t\t\t\tvar route = expressRouter.routes[routeInfo[0]] = expressRouter.routes[routeInfo[0]] || require(routePath + routeInfo[0]); // load route module into expressRouter.routes and set route var with this module\n\t\t\t\tfor (var k = 1; k < routeInfo.length; k++) {\n\t\t\t\t\tif (!route){\n\t\t\t\t\t\tthrow new Error('Route specified could not be found.');\n\t\t\t\t\t}\n\t\t\t\t\troute = route[routeInfo[k]]; // set route one level deeper each time\n\t\t\t\t}\n\t\t\t\troutes.push(route);\n\t\t\t}\n\t\t\texpressApp[lineInfo[0].toLowerCase()](lineInfo[1], routes); // apply routes to application\n\t\t}\n\t}\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}