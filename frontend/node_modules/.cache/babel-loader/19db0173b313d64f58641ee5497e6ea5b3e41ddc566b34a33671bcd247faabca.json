{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaken\\\\Documents\\\\Projects\\\\AdShare\\\\v02\\\\frontend\\\\src\\\\components\\\\StreamersList.js\",\n  _s = $RefreshSig$();\nimport StreamersListEntry from \"./StreamersListEntry\";\nimport PageSelector from \"./PageSelector\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StreamersList = () => {\n  _s();\n  const {\n    streamers\n  } = useSelector(state => state.streamer);\n  const {\n    sorting,\n    filters,\n    page\n  } = useSelector(state => state.filter);\n  let filteredStreamers = [...streamers];\n  filters.filter(filter => {\n    filteredStreamers = filteredStreamers.filter(streamer => streamer[filter.criterion] >= filter.min && streamer[filter.criterion] <= filter.max);\n    return null;\n  });\n  let sortedStreamers = [...filteredStreamers];\n  if (sorting.criterion) {\n    sortedStreamers = sortedStreamers.sort((a, b) => {\n      if (a[sorting.criterion] < b[sorting.criterion]) {\n        return 1;\n      }\n      if (a[sorting.criterion] > b[sorting.criterion]) {\n        return -1;\n      }\n      return 0;\n    });\n  }\n  if (sorting.rank === 'least') {\n    sortedStreamers.reverse();\n  }\n\n  // Load 10 streamers and hold page index\n  const streamersPerPage = 10;\n  let pageStreamers = [...sortedStreamers].slice(page * streamersPerPage, page * streamersPerPage + streamersPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [pageStreamers && pageStreamers.map(streamer => {\n      return /*#__PURE__*/_jsxDEV(StreamersListEntry, {\n        streamer: streamer\n      }, streamer._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 24\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(PageSelector, {\n      numStreamers: filteredStreamers.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(StreamersList, \"NR1edz+LBzvDr55Ak/W+z0g8Bds=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = StreamersList;\nexport default StreamersList;\nvar _c;\n$RefreshReg$(_c, \"StreamersList\");","map":{"version":3,"names":["StreamersListEntry","PageSelector","useSelector","StreamersList","streamers","state","streamer","sorting","filters","page","filter","filteredStreamers","criterion","min","max","sortedStreamers","sort","a","b","rank","reverse","streamersPerPage","pageStreamers","slice","map","_id","length"],"sources":["C:/Users/jaken/Documents/Projects/AdShare/v02/frontend/src/components/StreamersList.js"],"sourcesContent":["import StreamersListEntry from \"./StreamersListEntry\"\r\nimport PageSelector from \"./PageSelector\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst StreamersList = () => {\r\n    const { streamers } = useSelector(state => state.streamer)\r\n    const { sorting, filters, page } = useSelector(state => state.filter)\r\n    \r\n    let filteredStreamers = [...streamers]\r\n\r\n    filters.filter((filter) => {\r\n        filteredStreamers = filteredStreamers.filter((streamer) => \r\n            streamer[filter.criterion] >= filter.min && streamer[filter.criterion] <= filter.max\r\n        )\r\n        return null\r\n    })\r\n    \r\n    let sortedStreamers = [...filteredStreamers]\r\n    \r\n    if (sorting.criterion) {\r\n        sortedStreamers = sortedStreamers.sort((a, b) => {\r\n            if (a[sorting.criterion] < b[sorting.criterion]) {\r\n                return 1\r\n            }\r\n            if (a[sorting.criterion] > b[sorting.criterion]) {\r\n                return -1\r\n            }\r\n            return 0\r\n        })\r\n    }\r\n    if (sorting.rank === 'least'){\r\n        sortedStreamers.reverse()\r\n    }\r\n\r\n    // Load 10 streamers and hold page index\r\n    const streamersPerPage = 10\r\n    let pageStreamers = [...sortedStreamers].slice(page*streamersPerPage,page*streamersPerPage + streamersPerPage)\r\n\r\n\r\n    return (\r\n        <div>\r\n            {pageStreamers && pageStreamers.map((streamer) => {\r\n                return <StreamersListEntry key={streamer._id} streamer={streamer}/>\r\n            })}\r\n            <PageSelector numStreamers={filteredStreamers.length}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StreamersList"],"mappings":";;AAAA,OAAOA,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,WAAW,QAAQ,aAAa;AAAA;AAEzC,MAAMC,aAAa,GAAG,MAAM;EAAA;EACxB,MAAM;IAAEC;EAAU,CAAC,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAAC;EAC1D,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGP,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACK,MAAM,CAAC;EAErE,IAAIC,iBAAiB,GAAG,CAAC,GAAGP,SAAS,CAAC;EAEtCI,OAAO,CAACE,MAAM,CAAEA,MAAM,IAAK;IACvBC,iBAAiB,GAAGA,iBAAiB,CAACD,MAAM,CAAEJ,QAAQ,IAClDA,QAAQ,CAACI,MAAM,CAACE,SAAS,CAAC,IAAIF,MAAM,CAACG,GAAG,IAAIP,QAAQ,CAACI,MAAM,CAACE,SAAS,CAAC,IAAIF,MAAM,CAACI,GAAG,CACvF;IACD,OAAO,IAAI;EACf,CAAC,CAAC;EAEF,IAAIC,eAAe,GAAG,CAAC,GAAGJ,iBAAiB,CAAC;EAE5C,IAAIJ,OAAO,CAACK,SAAS,EAAE;IACnBG,eAAe,GAAGA,eAAe,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC7C,IAAID,CAAC,CAACV,OAAO,CAACK,SAAS,CAAC,GAAGM,CAAC,CAACX,OAAO,CAACK,SAAS,CAAC,EAAE;QAC7C,OAAO,CAAC;MACZ;MACA,IAAIK,CAAC,CAACV,OAAO,CAACK,SAAS,CAAC,GAAGM,CAAC,CAACX,OAAO,CAACK,SAAS,CAAC,EAAE;QAC7C,OAAO,CAAC,CAAC;MACb;MACA,OAAO,CAAC;IACZ,CAAC,CAAC;EACN;EACA,IAAIL,OAAO,CAACY,IAAI,KAAK,OAAO,EAAC;IACzBJ,eAAe,CAACK,OAAO,EAAE;EAC7B;;EAEA;EACA,MAAMC,gBAAgB,GAAG,EAAE;EAC3B,IAAIC,aAAa,GAAG,CAAC,GAAGP,eAAe,CAAC,CAACQ,KAAK,CAACd,IAAI,GAACY,gBAAgB,EAACZ,IAAI,GAACY,gBAAgB,GAAGA,gBAAgB,CAAC;EAG9G,oBACI;IAAA,WACKC,aAAa,IAAIA,aAAa,CAACE,GAAG,CAAElB,QAAQ,IAAK;MAC9C,oBAAO,QAAC,kBAAkB;QAAoB,QAAQ,EAAEA;MAAS,GAAjCA,QAAQ,CAACmB,GAAG;QAAA;QAAA;QAAA;MAAA,QAAuB;IACvE,CAAC,CAAC,eACF,QAAC,YAAY;MAAC,YAAY,EAAEd,iBAAiB,CAACe;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACrD;AAEd,CAAC;AAAA,GA3CKvB,aAAa;EAAA,QACOD,WAAW,EACEA,WAAW;AAAA;AAAA,KAF5CC,aAAa;AA6CnB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}